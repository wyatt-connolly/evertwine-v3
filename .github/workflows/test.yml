name: Test and Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      # Frontend checks
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run frontend linting
        working-directory: ./frontend
        run: npm run lint --if-present

      - name: Run frontend type check
        working-directory: ./frontend
        run: npx tsc --noEmit

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test --if-present

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      # Backend checks
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run backend linting
        working-directory: ./backend
        run: npm run lint --if-present

      - name: Run backend tests
        working-directory: ./backend
        run: npm test --if-present

      - name: Run backend type check
        working-directory: ./backend
        run: npx tsc --noEmit --if-present

  docker-build-test:
    name: Docker Build Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test frontend Docker build
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: linux/amd64
          push: false
          tags: evertwine-frontend:test

      - name: Test backend Docker build
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64
          push: false
          tags: evertwine-backend:test

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=evertwine-v3
            -Dsonar.organization=wyatt-connolly
