# Artillery Load Testing Configuration for Evertwine

config:
  target: "https://staging.evertwine.com"
  phases:
    # Warm-up phase
    - duration: 60
      arrivalRate: 5
      name: "Warm-up"

    # Ramp-up phase
    - duration: 120
      arrivalRate: 10
      rampTo: 50
      name: "Ramp-up"

    # Sustained load phase
    - duration: 300
      arrivalRate: 50
      name: "Sustained load"

    # Peak load phase
    - duration: 120
      arrivalRate: 100
      name: "Peak load"

    # Cool-down phase
    - duration: 60
      arrivalRate: 5
      name: "Cool-down"

  defaults:
    headers:
      User-Agent: "Artillery Load Test"

  processor: "./performance/custom-functions.js"

scenarios:
  # Homepage load test
  - name: "Homepage"
    weight: 30
    flow:
      - get:
          url: "/"
          capture:
            - header: "set-cookie"
              as: "sessionCookie"
      - think: 2

  # API health check
  - name: "Health Check"
    weight: 20
    flow:
      - get:
          url: "/api/health"
          expect:
            - statusCode: 200
            - hasProperty: "status"
      - think: 1

  # Blog listing
  - name: "Blog Listing"
    weight: 25
    flow:
      - get:
          url: "/blog"
      - think: 3
      - get:
          url: "/api/blog"
          expect:
            - statusCode: 200
            - hasProperty: "posts"
      - think: 2

  # Individual blog post
  - name: "Blog Post"
    weight: 15
    flow:
      - get:
          url: "/api/blog"
      - function: "selectRandomPost"
      - get:
          url: "/api/blog/{{ postSlug }}"
          expect:
            - statusCode: 200
            - hasProperty: "title"
      - think: 5

  # User authentication flow
  - name: "Authentication"
    weight: 10
    flow:
      - post:
          url: "/api/auth/register"
          json:
            firstName: "{{ $randomFirstName() }}"
            lastName: "{{ $randomLastName() }}"
            email: "test-{{ $randomString() }}@example.com"
            password: "TestPassword123!"
          expect:
            - statusCode: [201, 409] # 409 if user already exists
      - think: 2
      - post:
          url: "/api/auth/login"
          json:
            email: "test@example.com"
            password: "TestPassword123!"
          capture:
            - json: "$.token"
              as: "authToken"
          expect:
            - statusCode: [200, 401]
      - think: 1
      - get:
          url: "/api/users/profile"
          headers:
            Authorization: "Bearer {{ authToken }}"
          ifTrue: "authToken"

# Performance metrics and SLA definitions
metrics:
  - name: "Response Time"
    threshold: 2000 # 2 seconds
  - name: "Error Rate"
    threshold: 1 # 1% error rate
  - name: "Success Rate"
    threshold: 99 # 99% success rate

# Custom reporting
reporting:
  json: "performance-results.json"
  html: "performance-report.html"
